/* CRIANDO DELIMITER */

DELIMITER //
CREATE PROCEDURE SP_INSEREDOADOR
(IN PNOME VARCHAR(150), PNOMEPAI VARCHAR(150), PNOMEMAE VARCHAR(150), PDATANASCIMENTO DATE, PSEXO CHAR(1), PRG CHAR(9), PRUA VARCHAR(150), PBAIRRO VARCHAR(150), PCIDADE VARCHAR(150), PESTADO CHAR(2), PNUMERORESIDENCIA VARCHAR(10), PCEP CHAR(9), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF(NOT EXISTS(SELECT RG
			FROM DOADOR
			WHERE PRG = RG)) THEN
	BEGIN
		INSERT INTO DOADOR (NOME, NOMEPAI, NOMEMAE, DATANASCIMENTO, SEXO, RG, RUA, BAIRRO, CIDADE, ESTADO, NUMERORESIDENCIAL, CEP)
		VALUES (PNOME, PNOMEPAI, PNOMEMAE, PDATANASCIMENTO, PSEXO, PRG, PRUA, PBAIRRO, PCIDADE, PESTADO, PNUMERORESIDENCIA, PCEP);

		SET MENSAGEM = 'Candidato inserido no Banco de Dados, Operação realizada com sucesso!';
	END;
	ELSE
		
		SET MENSAGEM = 'Candidato existente no Banco de Dados, operação cancelada!';

	END IF;

END//
DELIMITER ;

call sp_inseredoador('Waldyrzão ZIKA', 'Valdir', 'Monica', '1999-12-26', 'M', '533378513', 'Rua Henrique da Costa', 'Jardim Itacolomi', 'São Paulo', 'SP', '8', '04386000', @msg);

DELIMITER //
CREATE PROCEDURE SP_ALTERADOADOR (IN PCODIGO INTEGER,IN PNOME VARCHAR(150), PNOMEPAI VARCHAR(150), PNOMEMAE VARCHAR(150), PDATANASCIMENTO DATE, PSEXO CHAR(1), PRG CHAR(9), PRUA VARCHAR(150), PBAIRRO VARCHAR(150), PCIDADE VARCHAR(150), PESTADO CHAR(2), PNUMERORESIDENCIA VARCHAR(10), PCEP CHAR(9), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF (NOT EXISTS (SELECT IDDOADOR
		        FROM DOADOR
			WHERE IDDOADOR <> PCODIGO AND RG = PRG)) THEN
	BEGIN
		UPDATE DOADOR
		SET NOME = PNOME,
		NOMEPAI = PNOMEPAI,
		NOMEMAE = PNOMEMAE,
		DATANASCIMENTO = PDATANASCIMENTO,
		SEXO = PSEXO,
		RG = PRG,
		RUA = PRUA,
		BAIRRO = PBAIRRO,
		CIDADE = PCIDADE,
		ESTADO = PESTADO,
		NUMERORESIDENCIAL = PNUMERORESIDENCIA,
		CEP = PCEP
		WHERE IDDoador = PCODIGO;
	
		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'RG incorreto, operação não realizada!';
	END IF;
END//
DELIMITER ;

call sp_alteradoador(8,'Waldyrzeraa ZIKA', 'Valdir', 'Monica', '1999-12-26', 'M', '533378512', 'Rua Henrique da Costa', 'Jardim Itacolomi', 'São Paulo', 'SP', '8', '04386000', @msg);


DELIMITER //
CREATE PROCEDURE SP_INSEREMEDICO
(IN PNOME VARCHAR(150),IN PCODIGO CHAR(6), IN PESTADOCRM CHAR(2), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF(NOT EXISTS(SELECT IDMEDICO FROM MEDICO WHERE NOME = PNOME AND CRM = PCODIGO AND ESTADOCRM = PESTADOCRM)) THEN
	BEGIN
		INSERT INTO MEDICO (NOME,CRM,ESTADOCRM)
		VALUES (PNOME,PCODIGO,PESTADOCRM);

		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Medico existente, operação cancelada!';
	END IF;

END//
DELIMITER ;
call sp_inseremedico('Vladimir Putin','878963', 'RU', @msg);


DELIMITER //
CREATE PROCEDURE SP_ALTERAMEDICO (IN PNOME VARCHAR(150), IN PCODIGO INTEGER, IN PCRM CHAR(6), IN PESTADOCRM CHAR(2), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF (NOT EXISTS (SELECT IDMEDICO
		        FROM MEDICO
			WHERE IDMEDICO <> PCODIGO AND CRM = PCRM AND PESTADOCRM = ESTADOCRM)) THEN
	BEGIN
		UPDATE MEDICO
		SET NOME = PNOME,
		CRM = PCRM,
		ESTADOCRM = PESTADOCRM
		WHERE IDMEDICO = PCODIGO;
	
		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'CRM incorreto, operação não realizada!';
	END IF;
END//
DELIMITER ;

call sp_alteramedico('Vladimir Zika', 5, '878963', 'RU', @msg);


DELIMITER //
CREATE PROCEDURE SP_INSEREDOACAO
(IN PCODIGO INTEGER, PDATADOACAO DATETIME, PQTDCOLETADA DECIMAL(5,2), OUT MENSAGEM VARCHAR(100))
BEGIN
	DECLARE AUX1 SMALLINT;
	SET AUX1 = (SELECT (DATEDIFF(CURDATE(), MAX( CAST(D.DATADOACAO AS DATE) ))) AS ULTDOACAO
	FROM DOADOR AS DR, DOACAO AS D
	WHERE  PCODIGO = D.IDDOADOR);
	
	IF((( AUX1 > 90 AND (SELECT SEXO FROM  DOADOR WHERE IDDOADOR = PCODIGO) = 'M') OR 
	( AUX1 > 120 AND (SELECT SEXO FROM  DOADOR WHERE IDDOADOR = PCODIGO) = 'F') OR AUX1 IS NULL) AND (SELECT RESULTADOGERAL FROM AVALIACAO
									WHERE IDDOADOR = PCODIGO AND DATAAVALIACAO = 
									(SELECT MAX(DATAAVALIACAO) FROM AVALIACAO WHERE IDDOADOR = PCODIGO)) IS TRUE)  THEN

	BEGIN
	
		INSERT INTO DOACAO (IDDOADOR, DATADOACAO, QTDCOLETADA)
		VALUES (PCODIGO, PDATADOACAO, PQTDCOLETADA);

		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Doador não compriu os requisitos necessários para doar, operação cancelada!';
	END IF;

END//
DELIMITER ;

call sp_inseredoacao(7, NOW(), 300.00, @msg);

DELIMITER //
CREATE PROCEDURE SP_ALTERADOACAO 
(IN PCODIGO INTEGER, PDOADOR INTEGER, PDATA DATETIME, PQTDCOLETADA DECIMAL(5,2), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF (NOT EXISTS(SELECT IDDOADOR FROM DOACAO
			WHERE IDDOACAO <> PCODIGO AND
			      DATADOACAO = PDATA AND
			      IDDOADOR = PDOADOR AND QTDCOLETADA = PQTDCOLETADA)) THEN
	BEGIN
		UPDATE DOACAO
		SET DATADOACAO = PDATA, IDDOADOR = PDOADOR, 
		QTDCOLETADA = PQTDCOLETADA  
		WHERE IDDOACAO = PCODIGO;

		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Doador já realizou uma doação nessa data e horário, alteração não realizada';
	END IF;
END//
DELIMITER ;

call sp_alteradoacao(7, 7, NOW(), 330.01, @msg);



DELIMITER //
CREATE PROCEDURE SP_INSEREAVALIACAO
(IN PCODIGO INTEGER, PDATAAVALIACAO DATETIME, PRESULTADOGERAL BOOL, OUT MENSAGEM VARCHAR(100))
BEGIN
	IF(NOT EXISTS(SELECT IDAVALIACAO FROM  AVALIACAO
			WHERE CAST(DATAAVALIACAO AS DATE) = CAST(PDATAAVALIACAO AS DATE) AND
			IDDOADOR = PCODIGO )) THEN

	BEGIN

		INSERT INTO AVALIACAO (IDDOADOR, DATAAVALIACAO, RESULTADOGERAL)
		VALUES (PCODIGO, PDATAAVALIACAO, PRESULTADOGERAL);

			SET MENSAGEM = 'Operação realizada com sucesso!';
		END;		
		ELSE

			SET MENSAGEM = 'Candidato já fez uma avalição no dia, operação cancelada!';
		END IF;

END //
DELIMITER ;

call sp_insereavaliacao(1, NOW(), TRUE, @msg);

DELIMITER //
CREATE PROCEDURE SP_ALTERAAVALIACAO 
(IN PCODIGO INTEGER, PDOADOR INTEGER, PDATAAVALIACAO DATETIME, PRESULTADOGERAL BOOL, OUT MENSAGEM VARCHAR(100))
BEGIN
	IF (NOT EXISTS(SELECT IDAVALIACAO FROM AVALIACAO
			WHERE IDAVALIACAO <> PCODIGO AND
			      PDATAAVALIACAO = DATAAVALIACAO AND
			      IDDOADOR = PDOADOR )) THEN
	BEGIN
		UPDATE AVALIACAO
		SET IDDOADOR = PDOADOR,
		DATAAVALIACAO = PDATAAVALIACAO,
		RESULTADOGERAL = PRESULTADOGERAL 
		WHERE IDAVALIACAO = PCODIGO;

		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Candidato já fez avaliação nessa data e horário já cadastrados, alteração não realizada';
	END IF;
END//
DELIMITER ;

call sp_alteraavaliacao(1, 7, NOW(), TRUE, @msg);

DELIMITER //
CREATE PROCEDURE SP_INSEREEXAMES
(IN PPERGUNTA VARCHAR(300), PNVLREFHEMOGLOBINA DECIMAL(5,2), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF ( (PPERGUNTA IS NOT NULL AND NOT EXISTS( SELECT IDEXAMES 
	FROM EXAMES WHERE UPPER(PERGUNTA) = UPPER(PPERGUNTA) ) ) OR 
	(NOT EXISTS(SELECT IDEXAMES FROM EXAMES 
	WHERE NVLREFHEMOGLOBINA IS NOT NULL))) THEN
	BEGIN
		INSERT INTO EXAMES (PERGUNTA, NVLREFHEMOGLOBINA)
		VALUES (PPERGUNTA, PNVLREFHEMOGLOBINA);

		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Informação de exame já existente e/ou Dados inseridos de forma incorreta, operação cancelada!';
	END IF;

END//
DELIMITER ;

call sp_insereexames('Usou Drogas?', NULL, @msg);


DELIMITER //
CREATE PROCEDURE SP_ALTERAEXAME
(IN PCODIGO INTEGER, IN PPERGUNTA VARCHAR(300), IN PNVLREFHEMOGLOBINA DECIMAL(5,2), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF ( ((NOT EXISTS(SELECT IDEXAMES 
	FROM EXAMES WHERE IDEXAMES <> PCODIGO AND UPPER(PERGUNTA) = UPPER(PPERGUNTA) )) AND PNVLREFHEMOGLOBINA IS NULL)  OR   
	((NOT EXISTS(SELECT IDEXAMES 
	FROM EXAMES)) AND PPERGUNTA IS NULL) ) THEN
	
	BEGIN
		UPDATE EXAMES
			SET PERGUNTA = PPERGUNTA,
			NVLREFHEMOGLOBINA = PNVLREFHEMOGLOBINA 
			WHERE IDEXAMES = PCODIGO;


		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Informação de exame já existente e/ou Dados inseridos de forma incorreta , operação cancelada!';
	END IF;

END//
DELIMITER ;

call sp_alteraexame(7, 'FEZ ENDOSCOPIA?', NULL, @msg);


DELIMITER //
CREATE PROCEDURE SP_INSERECONSULTA
(IN PCODIGO INTEGER,PDATA DATETIME,PCODIGO2 INTEGER,PCODIGO3 INTEGER,PCODIGO4 INTEGER, OUT MENSAGEM VARCHAR(100))
BEGIN
	IF(NOT EXISTS(SELECT IDCONSULTA
			FROM CONSULTA
			WHERE (PCODIGO=IDMEDICO AND PDATA=DATACONSULTA) OR
					PCODIGO3 = IDDOACAO AND PDATA = DATACONSULTA )) THEN
	BEGIN
		INSERT INTO CONSULTA (IDMEDICO,DATACONSULTA,IDEXAMESANGUE,IDDOACAO,IDTESTESANGUE)
		VALUES (PCODIGO,PDATA,PCODIGO2,PCODIGO3,PCODIGO4);

		SET MENSAGEM = 'Consulta agendada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Ja existe uma consulta agendada para essa doação, operação cancelada!';
	END IF;

END//
DELIMITER ;

call sp_insereconsulta(1, '2018-11-11 10:27:05', 2, 2, 4, @msg);

DELIMITER //
CREATE PROCEDURE SP_ALTERACONSULTA
(IN PIDCONSULTA INTEGER,PIDMEDICO INTEGER,PIDDOACAO INTEGER, PIDEXAMESAGUE INTEGER, PDATACONSULTA DATETIME, OUT MENSAGEM VARCHAR (150))
BEGIN
	IF(NOT EXISTS(SELECT IDCONSULTA 
			FROM CONSULTA 
			WHERE PIDCONSULTA<>IDCONSULTA AND ( (PIDMEDICO=IDMEDICO AND PDATACONSULTA=DATACONSULTA) OR (PIDDOACAO=IDDOACAO AND PDATACONSULTA=DATACONSULTA) ) )) THEN
	BEGIN 
		UPDATE CONSULTA 
		SET IDDOACAO=PIDDOACAO,
		    IDMEDICO=PIDMEDICO,
		    DATACONSULTA=PDATACONSULTA,
		    IDEXAMESANGUE=PIDEXAMESANGUE 
		    WHERE IDCONSULTA=PIDCONSULTA;
	
		SET MENSAGEM='Data da consulta alterada!';
		END;
		ELSE
			SET MENSAGEM='Ja existe uma consulta com esse medico marcada ou uma consulta para essa doacao para essa data,operação cancelada.';
		END IF;
END//
DELIMITER ;

call sp_alteraconsulta(1, 1, 2, 3, NOW(), @msg);	

DELIMITER //
CREATE PROCEDURE SP_INSEREEXAMESANGUE
(IN PCODIGO1 INTEGER,PCODIGO2 INTEGER,PRESULTADO VARCHAR(150),PDATA DATETIME, OUT MENSAGEM VARCHAR(100))
BEGIN
	IF(NOT EXISTS(SELECT IDEXAMESANGUE
			FROM EXAMESANGUE
			WHERE PCODIGO1=IDDOACAO AND 
			PCODIGO2=IDTESTESANGUE) ) THEN
	BEGIN
		INSERT INTO EXAMESANGUE (IDDOACAO,IDTESTESANGUE,RESULTADO,DATAEXAMESANGUE)
		VALUES (PCODIGO1,PCODIGO2,PRESULTADO,PDATA);

		SET MENSAGEM = 'Exame de sangue armazenado com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Ja existe um exame de sangue armazenado para essa doação, operação cancelada!';
	END IF;

END//
DELIMITER ;


DELIMITER //
CREATE PROCEDURE SP_ALTERAEXAMESANGUE
(IN PCODEXAMESANGUE INTEGER, PCODDOACAO INTEGER, PCODTESTESANGUE INTEGER, PRESULTADO VARCHAR(150), PDATA DATETIME, OUT MENSAGEM VARCHAR(100))
BEGIN
	IF( NOT EXISTS(SELECT IDEXAMESANGUE
					FROM EXAMESANGUE
					WHERE IDEXAMESANGUE <> PCODEXAMESANGUE AND IDDOACAO = PCODDOACAO AND IDTESTESANGUE = PCODTESTESANGUE
					AND RESULTADO = PRESULTADO AND PDATA = DATAEXAMESANGUE)) THEN


	BEGIN

		UPDATE EXAMESANGUE
		SET IDDOACAO = PCODDOACAO,
		IDTESTESANGUE = PCODTESTESANGUE,
		RESULTADO = PRESULTADO,
		DATAEXAMESANGUE = PDATA 
		WHERE IDEXAMESANGUE = PCODEXAMESANGUE;


		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Informação de exame de sangue já existente, operação cancelada!';
	END IF;

END//
DELIMITER ;

call sp_alteraexamesangue( 1, 1, 4, 'Viadão', ' 2017-11-24 10:00:15', @msg);

   

DELIMITER //
CREATE PROCEDURE SP_INSERIRTESTESANGUE
(IN PNOME VARCHAR(150),PVALORREF DECIMAL(5,2), PTIPOSANGUINEO VARCHAR(2), PFATORRH CHAR(1),PANTICORPOS VARCHAR(150), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF( (PNOME IS NULL AND PVALORREF IS NULL AND NOT EXISTS(SELECT IDTESTESANGUE 
			FROM TESTESANGUE
			WHERE PTIPOSANGUINEO=TIPOSANGUINEO AND PFATORRH=FATORRH AND PANTICORPOS=ANTICORPOS))
			 OR 
	( PTIPOSANGUINEO IS NULL AND PFATORRH IS NULL AND PANTICORPOS IS NULL AND NOT EXISTS(SELECT IDTESTESANGUE 
			FROM TESTESANGUE
			WHERE PNOME = NOME)) ) THEN


	BEGIN
		INSERT INTO TESTESANGUE (NOME,VALORREF,TIPOSANGUINEO,FATORRH,ANTICORPOS)
		VALUES (PNOME,PVALORREF,PTIPOSANGUINEO,PFATORRH,PANTICORPOS);

		SET MENSAGEM = 'Teste de sangue inserido com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Ja existe um teste de sangue com esses dados e/ou Dados inseridos de forma incorreta , operação cancelada!';
	END IF;

END//
DELIMITER ;  

call sp_inserirtestesangue(NULL, NULL, 'O', '+', 'NENHUMA', @msg);

DELIMITER //
CREATE PROCEDURE SP_ALTERATESTESANGUE
(IN PCODIGO INTEGER, PNOME VARCHAR(150), PVALORREF DECIMAL(5,2), PTIPOSANGUINEO VARCHAR(2), PFATORRH CHAR(1), PANTICORPOS VARCHAR(150), OUT MENSAGEM VARCHAR(100))
BEGIN
	IF ( ((NOT EXISTS(SELECT IDTESTESANGUE 
	FROM TESTESANGUE WHERE IDTESTESANGUE <> PCODIGO AND UPPER(NOME) = UPPER(PNOME) AND PVALORREF = VALORREF )) AND PTIPOSANGUINEO IS NULL AND PFATORRH IS NULL AND PANTICORPOS IS NULL)  OR   
	((NOT EXISTS(SELECT IDTESTESANGUE 
	FROM TESTESANGUE WHERE IDTESTESANGUE <> PCODIGO AND 
	TIPOSANGUINEO = PTIPOSANGUINEO AND FATORRH = PFATORRH AND 
	ANTICORPOS = PANTICORPOS)) AND PNOME IS NULL AND PVALORREF IS NULL) ) THEN
	
	BEGIN
		UPDATE TESTESANGUE
			SET NOME = PNOME,
			VALORREF = PVALORREF,
			TIPOSANGUINEO = PTIPOSANGUINEO,
			FATORRH = PFATORRH,
			ANTICORPOS = PANTICORPOS
			WHERE IDTESTESANGUE = PCODIGO;


		SET MENSAGEM = 'Operação realizada com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Informação de Teste de sangue já existente e/ou Dados inseridos de forma incorreta , operação cancelada!';
	END IF;

END//
DELIMITER ;

call sp_alteratestesangue(7, 'GONORREIA', 123.4, NULL, NULL, NULL, @msg);



DELIMITER //
CREATE PROCEDURE SP_INSERIRCANDEXAME
(IN PCODIGO INTEGER,PCODIGO2 INTEGER,PRESULTADO VARCHAR(300),PDATA DATETIME, OUT MENSAGEM VARCHAR(100))
BEGIN
	IF(NOT EXISTS(SELECT IDAVALIACAO
			FROM CANDEXAME
			WHERE PCODIGO = IDEXAMES AND PCODIGO2=IDAVALIACAO)) THEN
	BEGIN
		INSERT INTO CANDEXAME (IDEXAMES,IDAVALIACAO,RESULTADO,DATAEXAME)
		VALUES (PCODIGO,PCODIGO2,PRESULTADO,PDATA);

		SET MENSAGEM = 'Resposta do exame inserida com sucesso!';
	END;
	ELSE
		SET MENSAGEM = 'Ja existe um resultado da avaliacao cadastrado nesse exame, operação cancelada!';
	END IF;

END//
DELIMITER ;  

call sp_inserircandexame( 4, 10,'NÃO', NOW(), @msg);



DELIMITER //
CREATE PROCEDURE SP_ALTERACANDEXAME
(PIDAVALIACAO INTEGER,PIDEXAMES INTEGER,PRESULTADO VARCHAR(150),PDATAEXAME DATETIME,OUT MENSAGEM VARCHAR (150))
BEGIN
	IF( NOT EXISTS(SELECT IDAVALIACAO
		FROM CANDEXAME
		WHERE PIDEXAMES = IDEXAMES AND PIDAVALIACAO=IDAVALIACAO AND UPPER(PRESULTADO) = UPPER(RESULTADO))) THEN
	BEGIN 
		UPDATE CANDEXAME
		SET DATAEXAME=PDATAEXAME,
		    RESULTADO=PRESULTADO
		    WHERE IDEXAMES=PIDEXAMES AND IDAVALIACAO = PIDAVALIACAO;
	
		SET MENSAGEM='Resposta do exame alterada!';
		END;
		ELSE
			SET MENSAGEM='Esse exame já possui esses dados, operação cancelada.';
		END IF;
END//
DELIMITER ;
	







